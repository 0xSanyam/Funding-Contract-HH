{
	"address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "priceFeedAddress",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "FundMe__NotOwner",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "efficientWithdraw__failed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "fund__SendMore",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "withdraw__failed",
			"type": "error"
		},
		{
			"stateMutability": "payable",
			"type": "fallback"
		},
		{
			"inputs": [],
			"name": "MINIMUM_USD",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "efficientWithdraw",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "fund",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "funder",
					"type": "address"
				}
			],
			"name": "getAddressToAmountFunded",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "index",
					"type": "uint256"
				}
			],
			"name": "getFunders",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getOwner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getPriceFeed",
			"outputs": [
				{
					"internalType": "contract AggregatorV3Interface",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "withdraw",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"stateMutability": "payable",
			"type": "receive"
		}
	],
	"transactionHash": "0x0564f937f8837b631712bc14be671ea525b92eb8080e18449cb6fb87ee3f5396",
	"receipt": {
		"to": null,
		"from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
		"contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
		"transactionIndex": 0,
		"gasUsed": "967272",
		"logsBloom": "0x
		"blockHash": "0xa727bc0c3f24f996d9cbb38e072b581bd5adfcae6961beb535c69d810773248d",
		"transactionHash": "0x0564f937f8837b631712bc14be671ea525b92eb8080e18449cb6fb87ee3f5396",
		"logs": [],
		"blockNumber": 2,
		"cumulativeGasUsed": "967272",
		"status": 1,
		"byzantium": true
	},
	"args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
	"numDeployments": 1,
	"solcInputHash": "dd798066dfcc8c1c06a877c9e130aaa7",
	"metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"efficientWithdraw__failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"fund__SendMore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"withdraw__failed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"efficientWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sanyam Mahajan\",\"custom:experimental\":\"This is an experimental contract.\",\"details\":\"Implements price feed as a library, all function calls are currently implemented without side effects\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"All function calls are currently implemented without side effects\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function allows funding\"}},\"notice\":\"This is contract is made for learning purpose\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Custom Error\\nerror FundMe__NotOwner();\\nerror fund__SendMore();\\nerror withdraw__failed();\\nerror efficientWithdraw__failed();\\n\\n// Interfaces, libraries, contracts\\n\\n/** @title A contract for crowd funding\\n *\\t@author Sanyam Mahajan\\n * \\t@notice This is contract is made for learning purpose\\n * \\t@dev Implements price feed as a library, all function calls are currently implemented without side effects\\n *\\t@custom:experimental This is an experimental contract.\\n */\\ncontract FundMe {\\n\\tusing PriceConverter for uint256;\\n\\n\\tuint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n\\t// Collecting the addresses of the funders\\n\\taddress[] private s_funders;\\n\\n\\t// Mapping the funders to the amount they sent\\n\\tmapping(address => uint256) private s_addressToAmountFunded;\\n\\n\\taddress private immutable i_owner;\\n\\n\\t// 21,508 gas - immutable\\n\\t// 23,644 gas - non-immutable\\n\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\tmodifier onlyOwner() {\\n\\t\\tif (msg.sender != i_owner) {\\n\\t\\t\\trevert FundMe__NotOwner();\\n\\t\\t}\\n\\t\\t_; // rest of the original code is executed by writing this underscore\\n\\t}\\n\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ti_owner = msg.sender; // whoever deploys the contract is the owner\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\t}\\n\\n\\t// Special functions (constructor also) NO need to specify the \\\"function\\\" keyword.\\n\\treceive() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\t/**\\n\\t * \\t@notice This function allows funding\\n\\t * \\t@dev All function calls are currently implemented without side effects\\n\\t */\\n\\tfunction fund() public payable {\\n\\t\\tif (!(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD))\\n\\t\\t\\trevert fund__SendMore();\\n\\n\\t\\t// Money math is done in terms of wei,\\n\\t\\t// so, 1 ETH needs to be set as 1e18 value.\\n\\n\\t\\ts_funders.push(msg.sender);\\n\\t\\ts_addressToAmountFunded[msg.sender] = msg.value;\\n\\t}\\n\\n\\tfunction withdraw() public payable onlyOwner {\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < s_funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = s_funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\t// reset the funders array\\n\\t\\ts_funders = new address[](0);\\n\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}(\\\"\\\"); // this returns two variables\\n\\t\\t//(                ,bytes memory dataReturned)\\n\\t\\tif (!callSuccess) revert withdraw__failed();\\n\\t}\\n\\n\\tfunction efficientWithdraw() public payable onlyOwner {\\n\\t\\taddress[] memory funders = s_funders;\\n\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\ts_funders = new address[](0);\\n\\t\\t(bool Success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n\\t\\tif (!Success) revert efficientWithdraw__failed();\\n\\t}\\n\\n\\tfunction getOwner() public view returns (address) {\\n\\t\\treturn i_owner;\\n\\t}\\n\\n\\tfunction getFunders(uint256 index) public view returns (address) {\\n\\t\\treturn s_funders[index];\\n\\t}\\n\\n\\tfunction getAddressToAmountFunded(address funder)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn s_addressToAmountFunded[funder];\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n}\\n\",\"keccak256\":\"0x4f4b3ad56e084719e615ddba3f81694e278cf41cd66b18d8e5c9c7316c960578\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// This is a LIBRARY\\n// All the functions inside a library needs to be internal\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; // NPM Package\\n\\nlibrary PriceConverter {\\n\\tfunction getPrice(AggregatorV3Interface priceFeed)\\n\\t\\tinternal\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t(, int256 price, , , ) = priceFeed.latestRoundData();\\n\\n\\t\\t// msg.value and this should be equal in terms of formats\\n\\t\\treturn uint256(price * 1e10); // (1 X 10)^10 == 10000000000\\n\\t}\\n\\n\\tfunction getConversionRate(\\n\\t\\tuint256 ethAmount,\\n\\t\\tAggregatorV3Interface priceFeed\\n\\t) internal view returns (uint256) {\\n\\t\\tuint256 ethPrice = getPrice(priceFeed);\\n\\t\\tuint256 ethPriceInUsd = (ethPrice * ethAmount) / 1e18;\\n\\n\\t\\treturn ethPriceInUsd;\\n\\t}\\n}\\n\",\"keccak256\":\"0xa3ebbf2e55e1e4113ae9d2c730bb80e411ff15ecd488b9648f0384ecfebd763d\",\"license\":\"MIT\"}},\"version\":1}",
	"bytecode": "0x60a06040523480156200001157600080fd5b50604051620011a7380380620011a7833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110216200018660003960008181610363015281816105a9015281816105f901526107ef01526110216000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063b77e8c31146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a98565b6102d1565b6040516100cc9190610ade565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b25565b61031a565b6040516101099190610b61565b60405180910390f35b61011a610361565b005b34801561012857600080fd5b50610131610598565b60405161013e9190610ade565b60405180910390f35b34801561015357600080fd5b5061015c6105a5565b6040516101699190610b61565b60405180910390f35b34801561017e57600080fd5b506101876105cd565b6040516101949190610bdb565b60405180910390f35b6101a56101b1565b005b6101af6105f7565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b290919063ffffffff16565b1015610228576040517f322a8f8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061032f5761032e610bf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049157600080828154811061040b5761040a610bf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048990610c54565b9150506103e9565b50600067ffffffffffffffff8111156104ad576104ac610c9d565b5b6040519080825280602002602001820160405280156104db5781602001602082028036833780820191505090505b50600090805190602001906104f192919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051890610cfd565b60006040518083038185875af1925050503d8060008114610555576040519150601f19603f3d011682016040523d82523d6000602084013e61055a565b606091505b5050905080610595576040517fa625ea7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b5575b5050505050905060005b815181101561078a57600082828151811061072757610726610bf6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078290610c54565b915050610709565b50600067ffffffffffffffff8111156107a6576107a5610c9d565b5b6040519080825280602002602001820160405280156107d45781602001602082028036833780820191505090505b50600090805190602001906107ea92919061098e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083190610cfd565b60006040518083038185875af1925050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b50509050806108ae576040517f3e599ca300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806108be836108ee565b90506000670de0b6b3a764000085836108d79190610d12565b6108e19190610d9b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093757600080fd5b505afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610e59565b5050509150506402540be400816109869190610ed4565b915050919050565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a065782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ae565b5b509050610a149190610a18565b5090565b5b80821115610a31576000816000905550600101610a19565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6582610a3a565b9050919050565b610a7581610a5a565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b600060208284031215610aae57610aad610a35565b5b6000610abc84828501610a83565b91505092915050565b6000819050919050565b610ad881610ac5565b82525050565b6000602082019050610af36000830184610acf565b92915050565b610b0281610ac5565b8114610b0d57600080fd5b50565b600081359050610b1f81610af9565b92915050565b600060208284031215610b3b57610b3a610a35565b5b6000610b4984828501610b10565b91505092915050565b610b5b81610a5a565b82525050565b6000602082019050610b766000830184610b52565b92915050565b6000819050919050565b6000610ba1610b9c610b9784610a3a565b610b7c565b610a3a565b9050919050565b6000610bb382610b86565b9050919050565b6000610bc582610ba8565b9050919050565b610bd581610bba565b82525050565b6000602082019050610bf06000830184610bcc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5f82610ac5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9257610c91610c25565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ce7600083610ccc565b9150610cf282610cd7565b600082019050919050565b6000610d0882610cda565b9150819050919050565b6000610d1d82610ac5565b9150610d2883610ac5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d6157610d60610c25565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610da682610ac5565b9150610db183610ac5565b925082610dc157610dc0610d6c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610deb81610dcc565b8114610df657600080fd5b50565b600081519050610e0881610de2565b92915050565b6000819050919050565b610e2181610e0e565b8114610e2c57600080fd5b50565b600081519050610e3e81610e18565b92915050565b600081519050610e5381610af9565b92915050565b600080600080600060a08688031215610e7557610e74610a35565b5b6000610e8388828901610df9565b9550506020610e9488828901610e2f565b9450506040610ea588828901610e44565b9350506060610eb688828901610e44565b9250506080610ec788828901610df9565b9150509295509295909350565b6000610edf82610e0e565b9150610eea83610e0e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f2957610f28610c25565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f6657610f65610c25565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fa357610fa2610c25565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fe057610fdf610c25565b5b82820290509291505056fea264697066735822122099743a018e722beeed80155dd0aa1367471526f04dc876610f28cde567bf57f064736f6c63430008080033",
	"deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063b77e8c31146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a98565b6102d1565b6040516100cc9190610ade565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b25565b61031a565b6040516101099190610b61565b60405180910390f35b61011a610361565b005b34801561012857600080fd5b50610131610598565b60405161013e9190610ade565b60405180910390f35b34801561015357600080fd5b5061015c6105a5565b6040516101699190610b61565b60405180910390f35b34801561017e57600080fd5b506101876105cd565b6040516101949190610bdb565b60405180910390f35b6101a56101b1565b005b6101af6105f7565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b290919063ffffffff16565b1015610228576040517f322a8f8e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061032f5761032e610bf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561049157600080828154811061040b5761040a610bf6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048990610c54565b9150506103e9565b50600067ffffffffffffffff8111156104ad576104ac610c9d565b5b6040519080825280602002602001820160405280156104db5781602001602082028036833780820191505090505b50600090805190602001906104f192919061098e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051890610cfd565b60006040518083038185875af1925050503d8060008114610555576040519150601f19603f3d011682016040523d82523d6000602084013e61055a565b606091505b5050905080610595576040517fa625ea7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b5575b5050505050905060005b815181101561078a57600082828151811061072757610726610bf6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078290610c54565b915050610709565b50600067ffffffffffffffff8111156107a6576107a5610c9d565b5b6040519080825280602002602001820160405280156107d45781602001602082028036833780820191505090505b50600090805190602001906107ea92919061098e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083190610cfd565b60006040518083038185875af1925050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b50509050806108ae576040517f3e599ca300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6000806108be836108ee565b90506000670de0b6b3a764000085836108d79190610d12565b6108e19190610d9b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093757600080fd5b505afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190610e59565b5050509150506402540be400816109869190610ed4565b915050919050565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a065782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ae565b5b509050610a149190610a18565b5090565b5b80821115610a31576000816000905550600101610a19565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a6582610a3a565b9050919050565b610a7581610a5a565b8114610a8057600080fd5b50565b600081359050610a9281610a6c565b92915050565b600060208284031215610aae57610aad610a35565b5b6000610abc84828501610a83565b91505092915050565b6000819050919050565b610ad881610ac5565b82525050565b6000602082019050610af36000830184610acf565b92915050565b610b0281610ac5565b8114610b0d57600080fd5b50565b600081359050610b1f81610af9565b92915050565b600060208284031215610b3b57610b3a610a35565b5b6000610b4984828501610b10565b91505092915050565b610b5b81610a5a565b82525050565b6000602082019050610b766000830184610b52565b92915050565b6000819050919050565b6000610ba1610b9c610b9784610a3a565b610b7c565b610a3a565b9050919050565b6000610bb382610b86565b9050919050565b6000610bc582610ba8565b9050919050565b610bd581610bba565b82525050565b6000602082019050610bf06000830184610bcc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5f82610ac5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9257610c91610c25565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ce7600083610ccc565b9150610cf282610cd7565b600082019050919050565b6000610d0882610cda565b9150819050919050565b6000610d1d82610ac5565b9150610d2883610ac5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d6157610d60610c25565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610da682610ac5565b9150610db183610ac5565b925082610dc157610dc0610d6c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610deb81610dcc565b8114610df657600080fd5b50565b600081519050610e0881610de2565b92915050565b6000819050919050565b610e2181610e0e565b8114610e2c57600080fd5b50565b600081519050610e3e81610e18565b92915050565b600081519050610e5381610af9565b92915050565b600080600080600060a08688031215610e7557610e74610a35565b5b6000610e8388828901610df9565b9550506020610e9488828901610e2f565b9450506040610ea588828901610e44565b9350506060610eb688828901610e44565b9250506080610ec788828901610df9565b9150509295509295909350565b6000610edf82610e0e565b9150610eea83610e0e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f2957610f28610c25565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f6657610f65610c25565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fa357610fa2610c25565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fe057610fdf610c25565b5b82820290509291505056fea264697066735822122099743a018e722beeed80155dd0aa1367471526f04dc876610f28cde567bf57f064736f6c63430008080033",
	"devdoc": {
		"author": "Sanyam Mahajan",
		"custom:experimental": "This is an experimental contract.",
		"details": "Implements price feed as a library, all function calls are currently implemented without side effects",
		"kind": "dev",
		"methods": {
			"fund()": {
				"details": "All function calls are currently implemented without side effects"
			}
		},
		"title": "A contract for crowd funding",
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {
			"fund()": {
				"notice": "This function allows funding"
			}
		},
		"notice": "This is contract is made for learning purpose",
		"version": 1
	},
	"storageLayout": {
		"storage": [
			{
				"astId": 68,
				"contract": "contracts/FundMe.sol:FundMe",
				"label": "s_funders",
				"offset": 0,
				"slot": "0",
				"type": "t_array(t_address)dyn_storage"
			},
			{
				"astId": 72,
				"contract": "contracts/FundMe.sol:FundMe",
				"label": "s_addressToAmountFunded",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 77,
				"contract": "contracts/FundMe.sol:FundMe",
				"label": "s_priceFeed",
				"offset": 0,
				"slot": "2",
				"type": "t_contract(AggregatorV3Interface)45"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_array(t_address)dyn_storage": {
				"base": "t_address",
				"encoding": "dynamic_array",
				"label": "address[]",
				"numberOfBytes": "32"
			},
			"t_contract(AggregatorV3Interface)45": {
				"encoding": "inplace",
				"label": "contract AggregatorV3Interface",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	}
}
